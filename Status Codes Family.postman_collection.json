{
	"info": {
		"_postman_id": "40d6e7fb-d17e-427f-878e-20e40a1812f6",
		"name": "Status Codes Family",
		"description": "This demo server covers most common HTTP status codes: **2xx Success** (`200 OK`, `201 Created`, `204 No Content`), **3xx Redirection** (`301 Moved Permanently`), **4xx Client Errors** (`400 Bad Request`, `401 Unauthorized`, `403 Forbidden`, `404 Not Found`, `405 Method Not Allowed`, `408 Request Timeout`, `429 Too Many Requests`), and **5xx Server Error** (`500 Internal Server Error`). Each endpoint demonstrates realistic scenarios using query parameters, headers, request bodies, and client-side behaviors.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25338089",
		"_collection_link": "https://warped-escape-7502.postman.co/workspace/bdfc4d45-ab5c-4244-951f-a899e21f3ff1/collection/25338089-40d6e7fb-d17e-427f-878e-20e40a1812f6?action=share&source=collection_link&creator=25338089"
	},
	"item": [
		{
			"name": "2xx Success",
			"item": [
				{
					"name": "Get user info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/user?id=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"user"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/user?id=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"user"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Dummy\",\r\n    \"role\": \"editor\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			],
			"description": "The request was successfully received, understood, and accepted.  \n**Example:** `200 OK`, `201 Created`, `204 No Content`EndFragment"
		},
		{
			"name": "3xx Redirection",
			"item": [
				{
					"name": "Redirect",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/redirect-old",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"redirect-old"
							]
						}
					},
					"response": []
				}
			],
			"description": "Further action is needed to complete the request, usually following a new URL.  \n**Example:** `301 Moved Permanently`"
		},
		{
			"name": "4xx Client Error",
			"item": [
				{
					"name": "400 (expecting json data)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/bad-request",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"bad-request"
							]
						}
					},
					"response": []
				},
				{
					"name": "401",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "demo_token",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/protected",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"protected"
							]
						}
					},
					"response": []
				},
				{
					"name": "403",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "demo_token",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/forbidden?id=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"forbidden"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "demo_token",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/this_endpoint_does_not_exist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"this_endpoint_does_not_exist"
							]
						}
					},
					"response": []
				},
				{
					"name": "405",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "demo_token",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/only-post",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"only-post"
							]
						}
					},
					"response": []
				},
				{
					"name": "408",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "demo_token",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/timeout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"timeout"
							]
						}
					},
					"response": []
				},
				{
					"name": "429",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "demo_token",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/rate-limit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"rate-limit"
							]
						}
					},
					"response": []
				}
			],
			"description": "The request has a problem â€” invalid, unauthorized, or forbidden.  \n**Example:** `400 Bad Request`, `401 Unauthorized`, `404 Not Found`"
		},
		{
			"name": "5xx Server Error",
			"item": [
				{
					"name": "500",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/server-error",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"server-error"
							]
						}
					},
					"response": []
				}
			],
			"description": "The server failed to fulfill a valid request due to an internal error.  \n**Example:** `500 Internal Server Error`"
		}
	]
}